{
  "title": "UAW Playground Tutorial",
  "introduction": "Learn process simulation modeling through hands-on challenges across multiple domains.",
  "steps": [
    {
      "id": "intro_layout",
      "title": "1. Interface Overview",
      "instructions": "<p><strong>Welcome to the UAW Playground!</strong> This interface allows you to model and simulate real-world processes.</p><p><strong>Key interface areas:</strong></p><ul><li><b>JSON Editor (Top Left):</b> Define simulation structure - tasks, actors, and resources</li><li><b>Visual Timeline (Top Right):</b> Interactive timeline showing process flow</li><li><b>Space Editor Tab:</b> Design physical layouts and workspaces</li><li><b>Validation Panel (Bottom):</b> Automated error detection and optimization suggestions</li></ul><p><strong>Controls:</strong> Player controls, speed selector, and timeline scrubber enable time-based simulation.</p><p><em>Click 'Next' to continue.</em></p>",
      "initial_json": {
        "simulation": { 
          "meta": { 
            "id": "tutorial_intro",
            "article_title": "Mission Control Tutorial",
            "domain": "Training"
          },
          "config": {
            "time_unit": "minute",
            "start_time": "08:00",
            "end_time": "12:00"
          },
          "layout": {
            "meta": { "units": "meters", "pixels_per_unit": 20 },
            "locations": [
              { "id": "command_center", "name": "Command Center", "shape": { "type": "rect", "x": 50, "y": 50, "width": 300, "height": 200 } }
            ]
          },
          "objects": [
            { "id": "trainee", "type": "actor", "name": "Trainee", "properties": { "role": "Learning Specialist", "cost_per_hour": 0, "location": "command_center" } }
          ],
          "tasks": [
            { "id": "orientation", "emoji": "üéØ", "actor_id": "trainee", "start": "08:00", "duration": 30, "location": "command_center" }
          ]
        }
      },
      "validation": { "type": "none" },
      "success_message": "Interface overview complete."
    },
    {
      "id": "space_design_challenge",
      "title": "2. Space Design",
      "instructions": "<p><strong>Task:</strong> Design a functional bakery layout using the Space Editor.</p><p>Switch to the <strong>Space Editor</strong> tab to begin.</p><p><strong>Requirements:</strong></p><ol><li><strong>Create Prep Station:</strong> Click '+ Add', draw a rectangle, name it <strong>\"Prep Station\"</strong></li><li><strong>Set Dimensions:</strong> Set its <strong>Length</strong> to exactly <strong>5</strong> meters in Properties panel</li><li><strong>Add Oven Zone:</strong> Create a second location called <strong>\"Oven Zone\"</strong> with length <strong>3</strong> meters</li></ol><p><strong>Note:</strong> Use the Properties panel to adjust dimensions. The JSON updates automatically as you work.</p>",
      "initial_json": {
        "simulation": {
          "meta": {
            "id": "tutorial_space",
            "article_title": "Artisan Bakery Layout",
            "domain": "Food Production"
          },
          "config": {
            "time_unit": "minute",
            "start_time": "06:00",
            "end_time": "14:00"
          },
          "layout": {
            "meta": {
              "units": "meters",
              "pixels_per_unit": 20
            },
            "locations": [
              {
                "id": "reception",
                "name": "Reception Area",
                "shape": { "type": "rect", "x": 50, "y": 250, "width": 200, "height": 100 }
              }
            ]
          },
          "objects": [
            { "id": "architect", "type": "actor", "name": "Space Designer", "properties": { "role": "Layout Architect", "cost_per_hour": 30, "location": "reception" } }
          ],
          "tasks": [
            { "id": "space_planning", "emoji": "üìê", "actor_id": "architect", "start": "06:00", "duration": 60, "location": "reception" }
          ]
        }
      },
      "validation": { 
        "type": "custom_function",
        "function_name": "validateAdvancedSpaceDesign"
      },
      "success_message": "Space design complete."
    },
    {
      "id": "timeline_mastery",
      "title": "3. Timeline Manipulation",
      "instructions": "<p><strong>Task:</strong> Use the interactive timeline to resolve scheduling conflicts.</p><p>Switch to <strong>Simulation Render</strong> to view the timeline.</p><p><strong>Steps:</strong></p><ol><li><strong>Identify Conflict:</strong> The validation panel shows a scheduling overlap - one person cannot perform two tasks simultaneously</li><li><strong>Resolve Conflict:</strong> Drag the <code>'preheat_oven üî∏ üî•'</code> task to start after <code>'clean_up_spills üî∏ üßπ'</code> finishes</li><li><strong>Test Resize:</strong> Try dragging the right edge of any task to change its duration</li></ol><p><strong>Features:</strong> Click tasks to jump to their JSON code, or drag them between actors. The timeline is fully interactive.</p>",
      "initial_json": {
        "simulation": {
          "meta": {
            "id": "tutorial_timeline",
            "article_title": "Timeline Interactive Challenge",
            "domain": "Food Production"
          },
          "config": {
            "time_unit": "minute",
            "start_time": "07:00",
            "end_time": "09:00"
          },
          "layout": {
            "meta": {
              "units": "meters", 
              "pixels_per_unit": 20
            },
            "locations": [
              {
                "id": "main_kitchen",
                "name": "Main Kitchen",
                "shape": { "type": "rect", "x": 50, "y": 50, "width": 400, "height": 200 }
              }
            ]
          },
          "objects": [
            { "id": "assistant_chef", "type": "actor", "name": "Assistant Chef", "properties": { "role": "Kitchen Assistant", "cost_per_hour": 18, "location": "main_kitchen" } },
            { "id": "head_chef", "type": "actor", "name": "Head Chef", "properties": { "role": "Executive Chef", "cost_per_hour": 35, "location": "main_kitchen" } }
          ],
          "tasks": [
            { "id": "clean_up_spills", "emoji": "üßπ", "actor_id": "assistant_chef", "start": "07:00", "duration": 15, "location": "main_kitchen" },
            { "id": "preheat_oven", "emoji": "üî•", "actor_id": "assistant_chef", "start": "07:10", "duration": 20, "location": "main_kitchen" },
            { "id": "prep_vegetables", "emoji": "ü•ï", "actor_id": "head_chef", "start": "07:00", "duration": 30, "location": "main_kitchen" }
          ]
        }
      },
      "validation": {
        "type": "custom_function",
        "function_name": "validateNoAssistantOverlap"
      },
      "success_message": "Timeline manipulation complete."
    },
    {
      "id": "simulation_playback",
      "title": "4. Simulation Playback",
      "instructions": "<p><strong>Task:</strong> Explore simulation playback controls and time-based state tracking.</p><p><strong>Actions to complete:</strong></p><ol><li><strong>Start Playback:</strong> Click the ‚ñ∂Ô∏è button to begin simulation</li><li><strong>Adjust Speed:</strong> Change playback speed using the dropdown menu</li><li><strong>Scrub Timeline:</strong> Drag the red playhead to jump to different times</li><li><strong>Monitor States:</strong> Observe equipment and resource panels updating in real-time</li></ol><p><strong>Experiment:</strong> Try pausing mid-simulation and scrubbing back and forth. Notice how equipment states change and resources are consumed over time.</p>",
      "initial_json": {
        "simulation": {
          "meta": {
            "id": "tutorial_playback",
            "article_title": "Time Machine Workshop",
            "domain": "Manufacturing"
          },
          "config": {
            "time_unit": "minute", 
            "start_time": "09:00",
            "end_time": "10:30"
          },
          "layout": {
            "meta": { "units": "meters", "pixels_per_unit": 20 },
            "locations": [
              { "id": "assembly_line", "name": "Assembly Line", "shape": { "type": "rect", "x": 50, "y": 50, "width": 400, "height": 150 } },
              { "id": "quality_control", "name": "QC Station", "shape": { "type": "rect", "x": 500, "y": 50, "width": 200, "height": 150 } }
            ]
          },
          "objects": [
            { "id": "operator", "type": "actor", "name": "Machine Operator", "properties": { "role": "Assembly Specialist", "cost_per_hour": 22, "location": "assembly_line" } },
            { "id": "inspector", "type": "actor", "name": "QC Inspector", "properties": { "role": "Quality Inspector", "cost_per_hour": 28, "location": "quality_control" } },
            { "id": "assembly_machine", "type": "equipment", "name": "Assembly Machine", "emoji": "üè≠", "properties": { "state": "off", "capacity": 1, "location": "assembly_line" } },
            { "id": "components", "type": "resource", "name": "Components", "emoji": "‚öôÔ∏è", "properties": { "unit": "pieces", "quantity": 50, "location": "assembly_line" } },
            { "id": "finished_products", "type": "product", "name": "Finished Products", "emoji": "üì¶", "properties": { "unit": "units", "quantity": 0, "location": "quality_control" } }
          ],
          "tasks": [
            { 
              "id": "startup_machine",
              "emoji": "üîß", 
              "actor_id": "operator", 
              "start": "09:00", 
              "duration": 10, 
              "location": "assembly_line",
              "interactions": [
                { "object_id": "assembly_machine", "property_changes": { "state": { "from": "off", "to": "running" } } }
              ]
            },
            { 
              "id": "assembly_batch_1",
              "emoji": "üè≠", 
              "actor_id": "operator", 
              "start": "09:10", 
              "duration": 20, 
              "location": "assembly_line",
              "depends_on": ["startup_machine"],
              "interactions": [
                { "object_id": "components", "property_changes": { "quantity": { "delta": -10 } } },
                { "object_id": "finished_products", "property_changes": { "quantity": { "delta": 10 } } }
              ]
            },
            { 
              "id": "quality_inspection",
              "emoji": "üîç", 
              "actor_id": "inspector", 
              "start": "09:30", 
              "duration": 15, 
              "location": "quality_control",
              "depends_on": ["assembly_batch_1"]
            },
            { 
              "id": "shutdown_machine",
              "emoji": "üõë", 
              "actor_id": "operator", 
              "start": "10:00", 
              "duration": 5, 
              "location": "assembly_line",
              "interactions": [
                { "object_id": "assembly_machine", "property_changes": { "state": { "from": "running", "to": "off" } } }
              ]
            }
          ]
        }
      },
      "validation": { "type": "custom_function", "function_name": "validatePlaybackExperience" },
      "success_message": "Simulation playback complete."
    },
    {
      "id": "resource_economics",
      "title": "5. Resource Management",
      "instructions": "<p><strong>Scenario:</strong> A research lab is running short on critical materials.</p><p><strong>Problem:</strong> The validation panel shows resource shortages that will halt production.</p><p><strong>Tasks:</strong></p><ol><li><strong>Locate Issue:</strong> Find the <code>rare_minerals</code> object with insufficient <code>quantity</code>. Tip: You can click on the 'Rare Minerals' object in the simulation render to jump to that part of the JSON.</li><li><strong>Fix Shortage:</strong> Increase its <code>properties.quantity</code> to at least <code>15</code> units</li><li><strong>Observe States:</strong> Notice how equipment states change during tasks</li><li><strong>Monitor Consumption:</strong> Use the player to watch real-time resource usage</li></ol><p><strong>Application:</strong> This demonstrates supply chain modeling, inventory management, and resource constraints.</p>",
      "initial_json": {
        "simulation": {
          "meta": {
            "id": "tutorial_resources",
            "article_title": "Materials Science Lab Crisis",
            "domain": "Research & Development"
          },
          "config": {
            "time_unit": "minute",
            "start_time": "10:00",
            "end_time": "12:00"
          },
          "layout": {
            "meta": { "units": "meters", "pixels_per_unit": 20 },
            "locations": [
              { "id": "research_lab", "name": "Research Lab", "shape": { "type": "rect", "x": 50, "y": 50, "width": 350, "height": 200 } },
              { "id": "storage_vault", "name": "Secure Storage", "shape": { "type": "rect", "x": 450, "y": 50, "width": 200, "height": 200 } }
            ]
          },
          "objects": [
            { "id": "lead_scientist", "type": "actor", "name": "Dr. Smith", "properties": { "role": "Lead Researcher", "cost_per_hour": 75, "location": "research_lab" } },
            { "id": "lab_tech", "type": "actor", "name": "Lab Technician", "properties": { "role": "Research Assistant", "cost_per_hour": 35, "location": "research_lab" } },
            { "id": "spectrometer", "type": "equipment", "name": "Mass Spectrometer", "emoji": "üî¨", "properties": { "state": "calibrated", "capacity": 1, "location": "research_lab" } },
            { "id": "rare_minerals", "type": "resource", "name": "Rare Earth Minerals", "emoji": "üíé", "properties": { "unit": "grams", "quantity": 8, "location": "storage_vault" } },
            { "id": "catalyst_compound", "type": "resource", "name": "Catalyst Compound", "emoji": "üß™", "properties": { "unit": "ml", "quantity": 200, "location": "research_lab" } },
            { "id": "research_sample", "type": "product", "name": "Analyzed Sample", "emoji": "üìä", "properties": { "unit": "samples", "quantity": 0, "location": "research_lab" } }
          ],
          "tasks": [
            { 
              "id": "prepare_sample_batch_1",
              "emoji": "üß™", 
              "actor_id": "lab_tech", 
              "start": "10:00", 
              "duration": 30, 
              "location": "research_lab",
              "interactions": [
                { "object_id": "rare_minerals", "property_changes": { "quantity": { "delta": -12 } } },
                { "object_id": "catalyst_compound", "property_changes": { "quantity": { "delta": -50 } } }
              ]
            },
            { 
              "id": "spectral_analysis",
              "emoji": "üî¨", 
              "actor_id": "lead_scientist", 
              "start": "10:30", 
              "duration": 45, 
              "location": "research_lab",
              "depends_on": ["prepare_sample_batch_1"],
              "interactions": [
                { "object_id": "spectrometer", "property_changes": { "state": { "from": "calibrated", "to": "analyzing" } } },
                { "object_id": "research_sample", "property_changes": { "quantity": { "delta": 3 } } }
              ]
            },
            { 
              "id": "recalibrate_equipment",
              "emoji": "‚öôÔ∏è", 
              "actor_id": "lab_tech", 
              "start": "11:15", 
              "duration": 15, 
              "location": "research_lab",
              "interactions": [
                { "object_id": "spectrometer", "property_changes": { "state": { "from": "analyzing", "to": "calibrated" } } }
              ]
            }
          ]
        }
      },
      "validation": {
        "type": "custom_function",
        "function_name": "validateResourceEconomics"
      },
      "success_message": "Resource management complete."
    },
    {
      "id": "json_editing_mastery",
      "title": "6. JSON Editing",
      "instructions": "<p><strong>Task:</strong> Practice direct JSON manipulation using the interface tools.</p><p><strong>Requirements:</strong></p><ol><li><strong>Add Actor:</strong> Click '+ Object' button and choose the object type of 'Actor'. Create a <strong>\"Data Analyst\"</strong> with cost <strong>$40/hour</strong></li><li><strong>Create Resource:</strong> Use '+ Object' to add <strong>\"Server Capacity\"</strong> with 100 units. The most appropriate of the default object types would be 'Resource'</li><li><strong>Manual Task Entry:</strong> Add a JSON task called <strong>\"data_processing\"</strong> for your new analyst</li><li><strong>Format Code:</strong> Use the 'Format JSON' button to clean up formatting</li></ol><p><strong>Note:</strong> Click task blocks to auto-scroll to their JSON code. Syntax highlighting and validation occur automatically.</p>",
      "initial_json": {
        "simulation": {
          "meta": {
            "id": "tutorial_json_editing",
            "article_title": "Tech Startup Data Operations",
            "domain": "Technology"
          },
          "config": {
            "time_unit": "minute",
            "start_time": "09:00",
            "end_time": "13:00"
          },
          "layout": {
            "meta": { "units": "meters", "pixels_per_unit": 20 },
            "locations": [
              { "id": "dev_floor", "name": "Development Floor", "shape": { "type": "rect", "x": 50, "y": 50, "width": 400, "height": 250 } },
              { "id": "server_room", "name": "Server Room", "shape": { "type": "rect", "x": 500, "y": 50, "width": 200, "height": 250 } }
            ]
          },
          "objects": [
            { "id": "lead_dev", "type": "actor", "name": "Senior Developer", "properties": { "role": "Lead Developer", "cost_per_hour": 85, "location": "dev_floor" } },
            { "id": "database_server", "type": "equipment", "name": "Database Server", "emoji": "üóÑÔ∏è", "properties": { "state": "idle", "capacity": 10, "location": "server_room" } },
            { "id": "raw_data", "type": "resource", "name": "Raw Dataset", "emoji": "üìä", "properties": { "unit": "GB", "quantity": 500, "location": "server_room" } }
          ],
          "tasks": [
            { 
              "id": "database_optimization",
              "emoji": "‚ö°", 
              "actor_id": "lead_dev", 
              "start": "09:00", 
              "duration": 60, 
              "location": "dev_floor",
              "interactions": [
                { "object_id": "database_server", "property_changes": { "state": { "from": "idle", "to": "optimizing" } } }
              ]
            }
          ]
        }
      },
      "validation": { "type": "custom_function", "function_name": "validateJsonEditingMastery" },
      "success_message": "JSON editing complete."
    },
    {
      "id": "emergency_room_capstone",
      "title": "7. Emergency Room Challenge",
      "instructions": "<p><strong>Final Challenge:</strong> Optimize a hospital emergency room workflow during peak hours.</p><p><strong>Scenario:</strong> Multiple patients, limited staff, equipment dependencies, and resource constraints.</p><p><strong>Tasks:</strong></p><ol><li>Fix overlapping doctor schedules</li><li>Correct equipment state issues</li><li>Ensure adequate medical supplies</li><li>Establish proper task dependencies</li><li>Verify workflow using simulation player</li></ol><p><strong>Requirements:</strong> Apply timeline editing, resource management, JSON editing, and validation skills to create a functioning emergency room simulation.</p>",
      "initial_json": {
        "simulation": {
          "meta": { 
            "id": "tutorial_capstone",
            "article_title": "Metro General Emergency Department",
            "domain": "Healthcare"
          },
          "config": {
            "time_unit": "minute",
            "start_time": "14:00",
            "end_time": "18:00"
          },
          "layout": {
            "meta": { "units": "meters", "pixels_per_unit": 15 },
            "locations": [
              { "id": "triage", "name": "Triage Area", "shape": { "type": "rect", "x": 50, "y": 50, "width": 200, "height": 150 } },
              { "id": "emergency_bay_1", "name": "Emergency Bay 1", "shape": { "type": "rect", "x": 300, "y": 50, "width": 180, "height": 150 } },
              { "id": "emergency_bay_2", "name": "Emergency Bay 2", "shape": { "type": "rect", "x": 520, "y": 50, "width": 180, "height": 150 } },
              { "id": "imaging_suite", "name": "MRI Suite", "shape": { "type": "rect", "x": 300, "y": 250, "width": 200, "height": 180 } },
              { "id": "operating_room", "name": "OR-1", "shape": { "type": "rect", "x": 550, "y": 250, "width": 150, "height": 180 } }
            ]
          },
          "objects": [
            { "id": "dr_chen", "type": "actor", "name": "Dr. Chen", "properties": { "role": "Emergency Physician", "cost_per_hour": 200, "location": "triage" } },
            { "id": "nurse_martinez", "type": "actor", "name": "Nurse Martinez", "properties": { "role": "Trauma Nurse", "cost_per_hour": 75, "location": "emergency_bay_1" } },
            { "id": "surgeon_patel", "type": "actor", "name": "Dr. Patel", "properties": { "role": "Trauma Surgeon", "cost_per_hour": 350, "location": "operating_room" } },
            { "id": "mri_machine", "type": "equipment", "name": "MRI Scanner", "emoji": "üè•", "properties": { "state": "ready", "capacity": 1, "location": "imaging_suite" } },
            { "id": "surgical_suite", "type": "equipment", "name": "Surgical Equipment", "emoji": "‚öïÔ∏è", "properties": { "state": "sterilized", "capacity": 1, "location": "operating_room" } },
            { "id": "oxygen_supply", "type": "resource", "name": "Medical Oxygen", "emoji": "üí®", "properties": { "unit": "hours", "quantity": 8, "location": "emergency_bay_1" } },
            { "id": "blood_units", "type": "resource", "name": "Blood Bank Units", "emoji": "ü©∏", "properties": { "unit": "units", "quantity": 2, "location": "operating_room" } },
            { "id": "contrast_dye", "type": "resource", "name": "MRI Contrast", "emoji": "üíâ", "properties": { "unit": "doses", "quantity": 1, "location": "imaging_suite" } },
            { "id": "stabilized_patients", "type": "product", "name": "Stabilized Patients", "emoji": "üòå", "properties": { "unit": "patients", "quantity": 0, "location": "emergency_bay_2" } }
          ],
          "tasks": [
            { 
              "id": "patient_1_triage",
              "emoji": "ü©∫", 
              "actor_id": "dr_chen", 
              "start": "14:00", 
              "duration": 20, 
              "location": "triage"
            },
            { 
              "id": "patient_2_triage",
              "emoji": "ü©∫", 
              "actor_id": "dr_chen", 
              "start": "14:05", 
              "duration": 20, 
              "location": "triage"
            },
            { 
              "id": "patient_3_triage",
              "emoji": "ü©∫", 
              "actor_id": "dr_chen", 
              "start": "14:15", 
              "duration": 15, 
              "location": "triage"
            },
            { 
              "id": "emergency_stabilization",
              "emoji": "üö®", 
              "actor_id": "nurse_martinez", 
              "start": "14:15", 
              "duration": 30, 
              "location": "emergency_bay_1",
              "depends_on": ["patient_1_triage"],
              "interactions": [
                { "object_id": "oxygen_supply", "property_changes": { "quantity": { "delta": -2 } } },
                { "object_id": "stabilized_patients", "property_changes": { "quantity": { "delta": 1 } } }
              ]
            },
            { 
              "id": "mri_scan_patient_2",
              "emoji": "üè•", 
              "actor_id": "dr_chen", 
              "start": "14:25", 
              "duration": 45, 
              "location": "imaging_suite",
              "depends_on": ["patient_2_triage"],
              "interactions": [
                { "object_id": "mri_machine", "property_changes": { "state": { "from": "ready", "to": "scanning" } } },
                { "object_id": "contrast_dye", "property_changes": { "quantity": { "delta": -2 } } }
              ]
            },
            { 
              "id": "emergency_surgery",
              "emoji": "‚öïÔ∏è", 
              "actor_id": "surgeon_patel", 
              "start": "15:00", 
              "duration": 120, 
              "location": "operating_room",
              "depends_on": ["emergency_stabilization"],
              "interactions": [
                { "object_id": "surgical_suite", "property_changes": { "state": { "from": "sterilized", "to": "in-use" } } },
                { "object_id": "blood_units", "property_changes": { "quantity": { "delta": -3 } } }
              ]
            },
            { 
              "id": "post_surgery_monitoring",
              "emoji": "üìä", 
              "actor_id": "nurse_martinez", 
              "start": "15:30", 
              "duration": 60, 
              "location": "emergency_bay_2",
              "interactions": [
                { "object_id": "oxygen_supply", "property_changes": { "quantity": { "delta": -1 } } }
              ]
            }
          ]
        }
      },
      "validation": { "type": "custom_function", "function_name": "validateEmergencyRoomCapstone" },
      "success_message": "Emergency room challenge complete. Tutorial finished."
    },
    {
      "id": "graduation_celebration",
      "title": "8. Tutorial Complete",
      "instructions": "<p><strong>Tutorial Completed</strong></p><p><strong>Skills covered:</strong></p><ul><li>Space Design: Visual layout creation and property management</li><li>Timeline Editing: Interactive drag-and-drop editing and resizing</li><li>Simulation Playback: Time control, speed adjustment, and live state tracking</li><li>Resource Management: Supply chain modeling and constraint management</li><li>JSON Editing: Direct code editing and validation</li><li>Complex Problem Solving: Multi-domain workflow optimization</li></ul><p><strong>Next steps:</strong> Explore the sample simulation, create your own processes, or try advanced features like the experimental AI assistant.</p><p><em>Click 'Next' to return to the main playground.</em></p>",
      "initial_json": {
        "simulation": {
          "meta": {
            "id": "graduation_complete",
            "article_title": "üéì Playground Mastery Achieved",
            "domain": "Education"
          },
          "config": {
            "time_unit": "minute",
            "start_time": "12:00",
            "end_time": "12:30"
          },
          "layout": {
            "meta": { "units": "meters", "pixels_per_unit": 20 },
            "locations": [
              { "id": "auditorium", "name": "Graduation Auditorium", "shape": { "type": "rect", "x": 50, "y": 50, "width": 500, "height": 300 } }
            ]
          },
          "objects": [
            { "id": "graduate", "type": "actor", "name": "UAW Graduate", "properties": { "role": "Process Modeling Expert", "cost_per_hour": 0, "location": "auditorium" } },
            { "id": "playground_mastery", "type": "product", "name": "Playground Mastery", "emoji": "üèÜ", "properties": { "unit": "skills", "quantity": 1, "location": "auditorium" } }
          ],
          "tasks": [
            { "id": "graduation_ceremony", "emoji": "üéâ", "actor_id": "graduate", "start": "12:00", "duration": 30, "location": "auditorium" }
          ]
        }
      },
      "validation": { "type": "none" },
      "success_message": "Tutorial complete. You can now explore the full playground."
    }
  ]
}