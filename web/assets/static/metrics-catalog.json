[
  {
    "id": "schema.integrity.missing_root",
    "name": "Simulation Root Check",
    "description": "Ensures the top-level 'simulation' object exists.",
    "category": "Structural Integrity",
    "severity": "error",
    "validation_type": "computational",
    "computation": { "engine": "javascript", "function_name": "validateRootObject" }
  },
  {
    "id": "resource.flow.negative_stock",
    "name": "Negative Stock Check",
    "description": "Verifies that no consumable resource stock level drops below zero.",
    "category": "Resource Flow",
    "severity": "error",
    "validation_type": "computational",
    "computation": { "engine": "javascript", "function_name": "validateNegativeStock" }
  },
  {
    "id": "equipment.state.logic",
    "name": "Equipment State Logic",
    "description": "Checks for logical consistency in equipment usage, such as using a 'dirty' mixer or using equipment that is already in use.",
    "category": "Resource Flow",
    "severity": "error",
    "validation_type": "computational",
    "computation": { "engine": "javascript", "function_name": "validateEquipmentState" }
  },
  {
    "id": "actor.scheduling.overlap",
    "name": "Actor Task Overlap",
    "description": "Checks if any single actor is assigned to multiple tasks that overlap in time.",
    "category": "Scheduling",
    "severity": "error",
    "validation_type": "computational",
    "computation": { "engine": "javascript", "function_name": "validateActorOverlap" }
  },
  {
    "id": "temporal.dependency.violation",
    "name": "Task Dependency Timing",
    "description": "Ensures that no task starts before its declared dependencies have finished.",
    "category": "Scheduling",
    "severity": "warning",
    "validation_type": "computational",
    "computation": { "engine": "javascript", "function_name": "validateDependencyTiming" }
  }
]